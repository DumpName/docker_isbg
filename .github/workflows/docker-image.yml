name: Docker Image CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY_IMAGE: user4711/isbg

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    outputs:
      currentVersion: ${{ steps.semver.outputs.current }}
      nextVersion: ${{ steps.semver.outputs.next }}
    steps:
      - name: Checkout
        if: github.ref == 'refs/heads/main'
        uses: actions/checkout@v4
      - name: Get Next Version
        if: github.ref == 'refs/heads/main'
        id: semver
        uses: ietf-tools/semver-action@v1
        with:
          token: ${{ github.token }}
          branch: main
          majorList: major
          minorList: feat, feature, minor
          patchList: fix, bugfix, perf, style, refactor, test, tests
          skipInvalidTags: true
      - name: Create Version Tag
        uses: rickstaa/action-create-tag@v1
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        id: "tag_create"
        with:
          tag: ${{ steps.semver.outputs.next }}
          tag_exists_error: true
          message: "Release: ${{ steps.semver.outputs.next }}"
      # Print result using the action output.
      - name: Create Release
        uses: ncipollo/release-action@v1.12.0
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        with:
          allowUpdates: true
          draft: false
          makeLatest: true
          name: ${{ steps.semver.outputs.next }}
          body: Changelog Contents
          tag: ${{ steps.semver.outputs.next }}
          token: ${{ github.token }}
  build:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/386
          - linux/amd64
          - linux/arm64
          - linux/arm/v6
          - linux/arm/v7
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install cosign
        uses: sigstore/cosign-installer@v3 #v3.1.1
        with:
          cosign-release: 'v2.1.1'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # v3.0.0
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=false
          images: |
            ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,value=dev,enable=${{ github.ref == 'refs/heads/dev' }}
            type=semver,pattern=v{{ major }}.{{ minor }}.{{ patch }}-RC,value=${{ needs.release.outputs.nextVersion }},enable=${{ github.event_name == 'pull_request' }}
            type=semver,pattern=v{{ major }}.{{ minor }}.{{ patch }},value=${{ needs.release.outputs.nextVersion }},priority=900,enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
            type=semver,pattern=v{{ major }}.{{ minor }},value=${{ needs.release.outputs.nextVersion }},priority=901,enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
            type=semver,pattern=v{{ major }},value=${{ needs.release.outputs.nextVersion }},priority=902,enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
            type=raw,value=latest,enable=${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          pull: true
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ matrix.platform }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

